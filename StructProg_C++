// В динамическом массиве поменять местами максимальный элемент и элемент, находящийся в середине массива. 
// Далее отсортировать первую половину по возрастанию, вторую - по убыванию.
// Выполнить в структурном подходе.

#include <iostream>

int main()
{
	int n;
	std::cout << "enter n: ";
	std::cin >> n;
	int* arr = new int[n];
	std::cout << "enter array cells:" << std::endl;
	for (int i(0); i < n; i++) {
		std::cin >> arr[i];
	}
	int max = arr[0];
	for (int i(0); i < n; i++) {
		if (arr[i] > max) {
			max = i;
		}
	}

	int middle;
	int ch;
	middle = n / 2;
	ch = arr[middle];
	arr[middle] = arr[max];
	arr[max] = ch;

	for (int i(0); i < middle - 1; i++) {
		int min = i;
		for (int j = i + 1; j < middle; j++) {
			if (arr[j] < arr[min]) {
				min = j;
				int a = arr[i];
				arr[i] = arr[min];
				arr[min] = a;
			}
		}
	}
	for (int i(middle); i < n - 1; i++) {
		int min = i;
		for (int j = i + 1; j < n; j++) {
			if (arr[j] > arr[min]) {
				min = j;
				int a = arr[i];
				arr[i] = arr[min];
				arr[min] = a;
			}
		}
	}
	for (int i(0); i < n; i++) {
		std::cout << arr[i] << " ";
	}
}
